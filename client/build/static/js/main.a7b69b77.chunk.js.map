{"version":3,"sources":["components/MainBar.js","scroll.js","components/Content.js","components/Meme.js","components/Memes.js","components/Layout.js","components/ShowMeme.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["MainBar","navigate","useNavigate","style","position","padding","alignItems","display","width","justifyContent","borderBottom","backgroundColor","zIndex","letterSpacing","marginLeft","cursor","onClick","fontWeight","color","fontSize","left","right","Button","variant","size","textTransform","fontFamily","borderRadius","margin","marginRight","window","open","useStyles","makeStyles","theme","toTop","bottom","transition","breakpoints","up","Scroll","showBelow","classes","useState","show","setShow","handleScroll","pageYOffset","useEffect","addEventListener","removeEventListener","IconButton","top","behavior","className","aria-label","component","helpertext","Content","newMeme","React","state","setState","colour","setColour","name","setName","caption","setCaption","url","setUrl","preview","setPreview","hidden","setHidden","helperText1","setHelperText1","helperText2","setHelperText2","message","setMessage","toggleDrawer","toggleColor","col","checkDuplicates","c","u","axios","post","withCredentials","then","res","startsWith","tester","Image","src","testUrl","catch","err","response","data","Grid","container","item","xs","md","marginTop","textAlign","Drawer","BackdropProps","invisible","anchor","onClose","elevation","paddingLeft","paddingRight","maxWidth","Icon","onMouseEnter","onMouseLeave","sm","TextField","id","value","onChange","event","target","inputProps","fullWidth","helperText","FormHelperTextProps","multiline","rows","rowsMax","Paper","boxShadow","height","paddingTop","analyseTime","time","length","Date","getTime","parseInt","Meme","meme","Card","_id","Fab","Memes","signal","page","memes","setMemes","get","console","log","flexWrap","undefined","map","index","root","spacing","Layout","setSignal","setPage","count","setCount","getMemeCount","Container","minHeight","obj","Pagination","hidePrevButton","hideNextButton","extendedIcon","ShowMeme","useParams","setMeme","setOpen","handleClose","getMeme","checkFields","patch","disabled","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","delete","routes","path","children","element","to","replace","App","routing","useRoutes","paddingBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7b69b77.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MainBar = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        padding: \"14px 0px\",\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n        borderBottom: \"1px solid rgb(0,0,0,0.09)\",\r\n        backgroundColor: \"#ffb74d\",\r\n        zIndex: 10,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          letterSpacing: \"0px\",\r\n          marginLeft: \"30px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() => {\r\n          navigate(\"/\");\r\n        }}\r\n      >\r\n        {/* <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/e/e8/Logo_of_X_%28company%29.svg\"\r\n          height={24}\r\n          style={{ paddingRight: 4 }}\r\n        /> */}\r\n        <span\r\n          style={{\r\n            position: \"relative\",\r\n            fontWeight: 600,\r\n            color: \"#4F46E5\",\r\n            fontSize: 24,\r\n            left: 124.12,\r\n          }}\r\n        >\r\n          XMeme\r\n        </span>\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          color: \"#fff\",\r\n          right: 20,\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          style={{\r\n            textTransform: \"none\",\r\n            fontFamily: \"Oxygen\",\r\n            color: \"white\",\r\n            // fontSize: \"16px\",\r\n            backgroundColor: \"#047857\",\r\n            // padding: \"7px 19px\",\r\n            borderRadius: \"7px\",\r\n            margin: \"auto\",\r\n            marginRight: \"20px\",\r\n            // position: \"fixed\",\r\n            // float: \"right\",\r\n            // right: 20,\r\n          }}\r\n          onClick={() => {\r\n            window.open(\r\n              \"https://app.swaggerhub.com/apis-docs/Kevinpaulose/Xmeme/1.0.0\"\r\n            );\r\n          }}\r\n        >\r\n          swagger\r\n          <LaunchIcon size=\"small\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainBar;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toTop: {\r\n      zIndex: 2,\r\n      position: 'fixed',\r\n      bottom: '2vh',\r\n      backgroundColor: '#DCDCDC',\r\n      color: 'black',\r\n      \"&:hover, &.Mui-focusVisible\": {\r\n          transition: '0.3s',\r\n          color: '#f57c00',\r\n          backgroundColor: '#e0e0e0'\r\n      },\r\n      [theme.breakpoints.up('xs')]: {\r\n          right: '2%',\r\n          backgroundColor: 'rgb(220,220,220,0.7)',\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n          right: '3.5%',\r\n      },\r\n  }\r\n})\r\n)\r\n\r\nconst Scroll = ({\r\n  showBelow,\r\n}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [show, setShow] = useState(showBelow ? false : true)\r\n\r\n  const handleScroll = () => {\r\n      if (window.pageYOffset > showBelow) {\r\n          if (!show) setShow(true)\r\n      } else {\r\n          if (show) setShow(false)\r\n      }\r\n  }\r\n\r\n  const handleClick = () => {\r\n      window[`scrollTo`]({ top: 0, behavior: `smooth` })\r\n  }\r\n\r\n  useEffect(() => {\r\n      if (showBelow) {\r\n          window.addEventListener(`scroll`, handleScroll)\r\n          return () => window.removeEventListener(`scroll`, handleScroll)\r\n      }\r\n  })\r\n\r\n  return (\r\n      <div>\r\n          {show &&\r\n              <IconButton onClick={handleClick} className={classes.toTop} aria-label=\"to top\" component=\"span\">\r\n                  <ExpandLessIcon />\r\n              </IconButton>\r\n          }\r\n      </div>\r\n  )\r\n}\r\nexport default Scroll","import React, { useEffect } from \"react\";\r\nimport \"./Content.css\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport Scroll from \"./../scroll\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  helpertext: {\r\n    fontFamily: \"Oxygen\",\r\n    color: \"red\",\r\n    fontWeight: 700,\r\n  },\r\n}));\r\n\r\nconst Content = ({ newMeme }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useState(false);\r\n\r\n  const [colour, setColour] = React.useState({ color: \"#9EA2AD\" });\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [caption, setCaption] = React.useState(\"\");\r\n  const [url, setUrl] = React.useState(\"\");\r\n  const [preview, setPreview] = React.useState(\r\n    \"https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg\"\r\n  );\r\n\r\n  const [hidden, setHidden] = React.useState(true);\r\n\r\n  const [helperText1, setHelperText1] = React.useState(\"\");\r\n  const [helperText2, setHelperText2] = React.useState(\"\");\r\n\r\n  const [message, setMessage] = React.useState(\r\n    \"Make sure all fields are filled up.\"\r\n  );\r\n\r\n  const toggleDrawer = (open) => {\r\n    setState(open);\r\n  };\r\n\r\n  const toggleColor = (col) => {\r\n    setColour({ color: col });\r\n  };\r\n\r\n  const testUrl = () => {\r\n    if (url.startsWith(\"/\") || url.startsWith(\"memes\")) {\r\n      setPreview(\"https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg\");\r\n      setHidden(false);\r\n      setMessage(\"Invalid URL\");\r\n      return;\r\n    }\r\n\r\n    var tester = new Image();\r\n    tester.src = url;\r\n    tester.addEventListener(\"load\", () => {\r\n      setPreview(url);\r\n      setHidden(true);\r\n      setMessage(\"Make sure all fields are filled up.\");\r\n    });\r\n    tester.addEventListener(\"error\", () => {\r\n      setPreview(\"https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg\");\r\n      setHidden(false);\r\n      setMessage(\"Invalid URL\");\r\n    });\r\n  };\r\n\r\n  const checkFields = () => {\r\n    if (\r\n      name !== \"\" &&\r\n      caption !== \"\" &&\r\n      url !== \"\" &&\r\n      preview === url &&\r\n      helperText1 === \"\" &&\r\n      helperText2 === \"\"\r\n    ) {\r\n      toggleDrawer(false);\r\n      newMeme({ name, caption, url });\r\n    } else\r\n      setHidden(\r\n        name !== \"\" &&\r\n          caption !== \"\" &&\r\n          url !== \"\" &&\r\n          preview === url &&\r\n          helperText1 === \"\" &&\r\n          helperText2 === \"\"\r\n      );\r\n  };\r\n\r\n  const checkDuplicates = (c, u) => {\r\n    axios\r\n      .post(\"/memes/check\", { caption: c, url: u }, { withCredentials: true })\r\n      .then((res) => {\r\n        if (c) setHelperText1(\"\");\r\n        else if (u) {\r\n          setHelperText2(\"\");\r\n          testUrl();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (c) setHelperText1(err.response.data);\r\n        else if (u) setHelperText2(err.response.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (url === \"\") {\r\n      setHelperText2(\"\");\r\n      setPreview(\"https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg\");\r\n      setHidden(true);\r\n      setMessage(\"Make sure all fields are filled up.\");\r\n    } else {\r\n      checkDuplicates(null, url);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if (caption === \"\") setHelperText1(\"\");\r\n    else checkDuplicates(caption, null);\r\n  }, [caption]);\r\n\r\n  useEffect(() => {\r\n    if (state === false) {\r\n      setName(\"\");\r\n      setCaption(\"\");\r\n      setUrl(\"\");\r\n      setPreview(\"https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg\");\r\n      setHidden(true);\r\n    }\r\n  }, [state]);\r\n\r\n  return [\r\n    <Grid\r\n      container\r\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n    >\r\n      <Grid item xs={12} md={7}>\r\n        <h1\r\n          style={{\r\n            padding: \"30px 10px 0px 10px\",\r\n            marginTop: \"23px\",\r\n            fontWeight: 700,\r\n            letterSpacing: \"-1px\",\r\n            fontSize: \"36px\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          X Meme\r\n        </h1>\r\n        <h3\r\n          style={{\r\n            padding: \"0px 10px\",\r\n            margin: \"-10px 0px 0px 0px\",\r\n            fontSize: \"20px\",\r\n            fontWeight: 400,\r\n            color: \"#837280\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          Post your memes and explore other memes!\r\n        </h3>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={5}\r\n        style={{\r\n          padding: \"10px 0px\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          position: \"fixed\",\r\n          right: 20,\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{\r\n            textTransform: \"none\",\r\n            fontFamily: \"Oxygen\",\r\n            color: \"white\",\r\n            fontSize: \"16px\",\r\n            backgroundColor: \"#4338CA\",\r\n            padding: \"7px 19px\",\r\n            borderRadius: \"7px\",\r\n            margin: \"auto\",\r\n            // position: \"fixed\",\r\n            // float: \"right\",\r\n            // right: 20,\r\n          }}\r\n          onClick={() => toggleDrawer(true)}\r\n        >\r\n          Create Meme\r\n        </Button>\r\n      </Grid>\r\n    </Grid>,\r\n    <Drawer\r\n      BackdropProps={{ invisible: true }}\r\n      anchor={\"right\"}\r\n      open={state}\r\n      onClose={() => toggleDrawer(false)}\r\n      style={{ width: \"50px\" }}\r\n      elevation={1}\r\n      width=\"50%\"\r\n    >\r\n      <div style={{ display: \"flex\", backgroundColor: \"#F9FAFB\" }}>\r\n        <div style={{ paddingLeft: 20, paddingRight: 20, maxWidth: \"600px\" }}>\r\n          <h4 style={{ fontWeight: 400, fontSize: 20 }}>New X Meme</h4>\r\n          <h5\r\n            style={{\r\n              fontWeight: 400,\r\n              fontSize: 14,\r\n              color: \"#6b7280\",\r\n              marginTop: \"-18px\",\r\n            }}\r\n          >\r\n            Get started by filling in the information below to create your new\r\n            xmeme. Don't DOS it please. Be a human.\r\n          </h5>\r\n        </div>\r\n        <div style={{ padding: \"30px 10px\" }}>\r\n          <Icon\r\n            onClick={() => toggleDrawer(false)}\r\n            style={{ cursor: \"pointer\" }}\r\n            onMouseEnter={() => toggleColor(\"#6B7280\")}\r\n            onMouseLeave={() => toggleColor(\"#9EA2AD\")}\r\n          >\r\n            <CloseRoundedIcon style={colour} />\r\n          </Icon>\r\n        </div>\r\n      </div>\r\n      <Grid\r\n        container\r\n        style={{\r\n          borderBottom: \"1px solid rgb(0,0,0,0.1)\",\r\n          padding: \"20px 20px\",\r\n          fontSize: \"16px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <span style={{ fontSize: \"14px\" }}>Meme Owner *</span>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7}>\r\n          <TextField\r\n            id=\"name\"\r\n            size=\"small\"\r\n            value={name}\r\n            onChange={(event) => {\r\n              setName(event.target.value);\r\n            }}\r\n            inputProps={{ style: { fontFamily: \"Oxygen\", fontSize: \"14px\" } }}\r\n            fullWidth\r\n            id=\"outlined-name\"\r\n            placeholder=\"Enter your full name\"\r\n            variant=\"outlined\"\r\n            className=\"inputRounded\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        style={{\r\n          borderBottom: \"1px solid rgb(0,0,0,0.1)\",\r\n          padding: \"20px 20px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          style={{ display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          <span style={{ fontSize: \"14px\" }}>Caption *</span>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7}>\r\n          <TextField\r\n            id=\"caption\"\r\n            value={caption}\r\n            helperText={helperText1}\r\n            FormHelperTextProps={{\r\n              className: classes.helpertext,\r\n            }}\r\n            onChange={(event) => {\r\n              setCaption(event.target.value);\r\n            }}\r\n            size=\"small\"\r\n            inputProps={{ style: { fontFamily: \"Oxygen\", fontSize: \"14px\" } }}\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            rowsMax={3}\r\n            id=\"outlined-caption\"\r\n            placeholder=\"Be creative with your caption\"\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        style={{\r\n          borderBottom: \"1px solid rgb(0,0,0,0.1)\",\r\n          padding: \"20px 20px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          style={{ display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          <span style={{ fontSize: \"14px\" }}>Meme URL *</span>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7}>\r\n          <TextField\r\n            id=\"url\"\r\n            value={url}\r\n            helperText={helperText2}\r\n            FormHelperTextProps={{\r\n              className: classes.helpertext,\r\n            }}\r\n            onChange={(event) => {\r\n              setUrl(event.target.value);\r\n            }}\r\n            size=\"small\"\r\n            inputProps={{ style: { fontFamily: \"Oxygen\", fontSize: \"14px\" } }}\r\n            fullWidth\r\n            id=\"outlined-url\"\r\n            placeholder=\"Enter URL of your meme here\"\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        style={{\r\n          borderBottom: \"1px solid rgb(0,0,0,0.1)\",\r\n          padding: \"20px 20px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          style={{ display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          <span style={{ fontSize: \"14px\" }}>Meme Preview *</span>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7}>\r\n          <Paper\r\n            elevation={1}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              boxShadow: \"0px 2px 4px 1px rgb(0,0,0,0.1)\",\r\n            }}\r\n          >\r\n            <img src={preview} height=\"260px\" width=\"350px\" />\r\n          </Paper>\r\n          <div style={{ margin: \"10px 0px 10px 0px\", fontSize: \"18px\" }}>\r\n            {caption}\r\n          </div>\r\n          <div\r\n            style={{ margin: \"0px 0px\", color: \"#6b7280\", fontSize: \"16px\" }}\r\n          >\r\n            {name}\r\n          </div>\r\n        </Grid>\r\n        <div hidden={hidden} style={{ paddingTop: \"40px\", color: \"#b91c1c\" }}>\r\n          {message}\r\n        </div>\r\n      </Grid>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          padding: \"10px 18px\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          style={{\r\n            textTransform: \"none\",\r\n            fontFamily: \"Oxygen\",\r\n            fontSize: \"14px\",\r\n            padding: \"5px 15px\",\r\n            margin: \"10px\",\r\n            borderRadius: \"7px\",\r\n          }}\r\n          onClick={() => toggleDrawer(false)}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{\r\n            textTransform: \"none\",\r\n            fontFamily: \"Oxygen\",\r\n            color: \"white\",\r\n            fontSize: \"14px\",\r\n            backgroundColor: \"#4338CA\",\r\n            padding: \"5px 15px\",\r\n            margin: \"10px\",\r\n            borderRadius: \"7px\",\r\n          }}\r\n          onClick={() => {\r\n            checkFields();\r\n          }}\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </Drawer>,\r\n    <Scroll showBelow={250} />,\r\n  ];\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst analyseTime = (time) => {\r\n  let length = (new Date().getTime() - new Date(time).getTime()) / 1000;\r\n\r\n  if (length < 60) return `just now`;\r\n  if (length < 120) return `a min ago`;\r\n  length = length / 60;\r\n\r\n  if (length < 60) return `${parseInt(length)} mins ago`;\r\n  length = length / 60;\r\n\r\n  if (length < 2) return `an hour ago`;\r\n  if (length < 24) return `${parseInt(length)} hours ago`;\r\n  length = length / 24;\r\n\r\n  if (length < 2) return `a day ago`;\r\n  if (length < 31) return `${parseInt(length)} days ago`;\r\n  length = length / 30.5;\r\n\r\n  if (length < 2) return `a month ago`;\r\n  if (length < 12) return `${parseInt(length)} months ago`;\r\n  length = length / 12;\r\n\r\n  if (length < 2) return `an year ago`;\r\n\r\n  return `${parseInt(length)} years ago`;\r\n};\r\n\r\nconst Meme = ({ meme }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [preview, setPreview] = React.useState(\"\");\r\n\r\n  var tester = new Image();\r\n  tester.src = meme.url;\r\n  tester.addEventListener(\"load\", () => setPreview(meme.url));\r\n  tester.addEventListener(\"error\", () =>\r\n    setPreview(\"https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg\")\r\n  );\r\n\r\n  return (\r\n    <Grid item style={{ padding: \"50px 10px 0px 10px\" }} xs={12} sm={6} md={4}>\r\n      <Card\r\n        elevation={1}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          boxShadow: \"0px 2px 4px 1px rgb(0,0,0,0.1)\",\r\n          width: \"100%\",\r\n          textAlign: \"left\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() => {\r\n          navigate(`/${meme._id}`);\r\n        }}\r\n      >\r\n        <img src={preview} height=\"200px\" width=\"300px\" />\r\n      </Card>\r\n      <div\r\n        style={{\r\n          margin: \"10px 0px 10px 0px\",\r\n          fontSize: \"18px\",\r\n          textAlign: \"left\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div>{meme.caption}</div>\r\n        <div>\r\n          <Fab\r\n            variant=\"extended\"\r\n            // color=\"primary\"\r\n            aria-label=\"add\"\r\n            size=\"small\"\r\n            style={{\r\n              padding: \"0px 0px\",\r\n              //   marginRight: \"80px\",\r\n              //   fontFamily: \"Oxygen\",\r\n              //   fontWeight: 700,\r\n            }}\r\n            onClick={() => {}}\r\n          >\r\n            <ShareIcon fontSize=\"small\" color=\"primary\" />\r\n          </Fab>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          margin: \"0px 0px\",\r\n          color: \"#6b7280\",\r\n          fontSize: \"16px\",\r\n          textAlign: \"left\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div>{meme.name}</div>\r\n        <div>{analyseTime(meme.time)}</div>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Meme;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Meme from \"./Meme\";\r\n\r\nconst Memes = ({ signal, page }) => {\r\n  const [memes, setMemes] = React.useState([]);\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  const getMemes = () => {\r\n    axios\r\n      .get(`/memes/page/${page}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        setMemes(res.data.memes);\r\n        setMessage(\"No Memes Yet\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMemes();\r\n  }, [signal, page]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      style={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"flex-start\",\r\n      }}\r\n    >\r\n      {memes != null && memes != undefined && memes.length !== 0 ? (\r\n        memes.map((meme, index) => {\r\n          return <Meme meme={meme} key={index} />;\r\n        })\r\n      ) : (\r\n        <div\r\n          style={{\r\n            height: \"200px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            fontSize: \"30px\",\r\n          }}\r\n        >\r\n          {message}\r\n        </div>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Memes;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Content from \"./Content\";\r\nimport Memes from \"./Memes\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nfunction Layout() {\r\n  const classes = useStyles();\r\n  const [signal, setSignal] = React.useState(false);\r\n\r\n  const [page, setPage] = React.useState(1);\r\n  const [count, setCount] = React.useState(1);\r\n\r\n  const addNewMeme = (obj) => {\r\n    axios.post(\"/memes\", { ...obj }, { withCredentials: true }).then((res) => {\r\n      setSignal(!signal);\r\n      getMemeCount();\r\n    });\r\n  };\r\n\r\n  const getMemeCount = () => {\r\n    axios\r\n      .get(\"/memes\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        setCount(parseInt((res.data.memes.length - 1) / 100 + 1));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMemeCount();\r\n  }, []);\r\n\r\n  const changePage = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return [\r\n    <div style={{ height: \"60px\" }}></div>,\r\n    <Container maxWidth=\"lg\" style={{ minHeight: \"100vh\" }}>\r\n      <Content newMeme={addNewMeme} key=\"content\" />\r\n      <div className={classes.root}>\r\n        Page&nbsp;&nbsp;\r\n        <Pagination\r\n          count={count}\r\n          page={page}\r\n          onChange={changePage}\r\n          color=\"primary\"\r\n          hidePrevButton\r\n          hideNextButton\r\n        />\r\n      </div>\r\n      <Memes signal={signal} page={page} key=\"memes\" />\r\n    </Container>,\r\n  ];\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { useParams } from \"react-router\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Meme from \"./Meme\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  helpertext: {\r\n    fontFamily: \"Oxygen\",\r\n    color: \"red\",\r\n    fontWeight: 700,\r\n  },\r\n}));\r\n\r\nconst ShowMeme = () => {\r\n  const classes = useStyles();\r\n\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const [meme, setMeme] = React.useState(\"\");\r\n\r\n  const [state, setState] = React.useState(false);\r\n  const [colour, setColour] = React.useState({ color: \"#9EA2AD\" });\r\n\r\n  const [caption, setCaption] = React.useState(\"\");\r\n  const [url, setUrl] = React.useState(\"\");\r\n  const [preview, setPreview] = React.useState(\r\n    \"https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg\"\r\n  );\r\n\r\n  const [hidden, setHidden] = React.useState(true);\r\n\r\n  const [helperText1, setHelperText1] = React.useState(\"\");\r\n  const [helperText2, setHelperText2] = React.useState(\"\");\r\n\r\n  const [message, setMessage] = React.useState(\r\n    \"Make sure all fields are filled up.\"\r\n  );\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getMeme = () => {\r\n    axios\r\n      .get(`/memes/${id}`, { withCredentials: true })\r\n      .then((res) => {\r\n        setMeme(res.data.meme);\r\n      })\r\n      .catch((err) => {\r\n        navigate(\"/\");\r\n      });\r\n  };\r\n\r\n  const updateMeme = () => {\r\n    axios\r\n      .patch(`/memes/${id}`, { caption, url }, { withCredentials: true })\r\n      .then((res) => {\r\n        getMeme();\r\n      })\r\n      .catch((err) => {\r\n        getMeme();\r\n      });\r\n  };\r\n\r\n  const deleteMeme = () => {\r\n    axios\r\n      .delete(`/memes/${id}`, { withCredentials: true })\r\n      .then((res) => {\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        handleClose();\r\n        getMeme();\r\n      });\r\n  };\r\n\r\n  const shouldUpdate = () => {\r\n    return caption !== meme.caption || url !== meme.url;\r\n  };\r\n\r\n  const toggleDrawer = (open) => {\r\n    setState(open);\r\n  };\r\n\r\n  const toggleColor = (col) => {\r\n    setColour({ color: col });\r\n  };\r\n\r\n  const testUrl = () => {\r\n    if (url.startsWith(\"/\") || url.startsWith(\"api/v1\")) {\r\n      setPreview(\"https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg\");\r\n      setHidden(false);\r\n      setMessage(\"Invalid URL\");\r\n      return;\r\n    }\r\n\r\n    var tester = new Image();\r\n    tester.src = url;\r\n    tester.addEventListener(\"load\", () => {\r\n      setPreview(url);\r\n      setHidden(true);\r\n      setMessage(\"Make sure all fields are filled up.\");\r\n    });\r\n    tester.addEventListener(\"error\", () => {\r\n      setPreview(\"https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg\");\r\n      setHidden(false);\r\n      setMessage(\"Invalid URL\");\r\n    });\r\n  };\r\n\r\n  const checkFields = () => {\r\n    if (caption !== \"\" && url !== \"\" && preview === url) {\r\n      toggleDrawer(false);\r\n      updateMeme();\r\n    } else\r\n      setHidden(\r\n        caption !== \"\" &&\r\n          url !== \"\" &&\r\n          preview === url &&\r\n          helperText1 === \"\" &&\r\n          helperText2 === \"\"\r\n      );\r\n  };\r\n\r\n  const checkDuplicates = (c, u) => {\r\n    axios\r\n      .post(\"/memes/check\", { caption: c, url: u }, { withCredentials: true })\r\n      .then((res) => {\r\n        if (c) setHelperText1(\"\");\r\n        else if (u) {\r\n          setHelperText2(\"\");\r\n          testUrl();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (c) setHelperText1(err.response.data);\r\n        else if (u) setHelperText2(err.response.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (url === undefined || url === null) return;\r\n    if (url === \"\") {\r\n      setHelperText2(\"\");\r\n      setPreview(\"https://cdn.sstatic.net/Sites/stackoverflow/img/404.svg\");\r\n      setHidden(true);\r\n      setMessage(\"Make sure all fields are filled up.\");\r\n    } else if (url !== meme.url) {\r\n      checkDuplicates(null, url);\r\n    } else {\r\n      setHelperText2(\"\");\r\n      setPreview(url);\r\n      setHidden(true);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if (caption === \"\" || caption === meme.caption) setHelperText1(\"\");\r\n    else checkDuplicates(caption, null);\r\n  }, [caption]);\r\n\r\n  useEffect(() => {\r\n    setCaption(meme.caption);\r\n    setUrl(meme.url);\r\n  }, [meme]);\r\n\r\n  useEffect(() => {\r\n    getMeme();\r\n  }, []);\r\n\r\n  return [\r\n    <div\r\n      style={{ display: \"flex\", justifyContent: \"center\", paddingTop: \"100px\" }}\r\n    >\r\n      <Fab\r\n        variant=\"extended\"\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        style={{ marginRight: \"80px\", fontFamily: \"Oxygen\", fontWeight: 700 }}\r\n        onClick={() => toggleDrawer(true)}\r\n      >\r\n        <EditIcon className={classes.extendedIcon} />\r\n        EDIT\r\n      </Fab>\r\n      <Fab\r\n        variant=\"extended\"\r\n        color=\"secondary\"\r\n        aria-label=\"add\"\r\n        style={{ fontFamily: \"Oxygen\", fontWeight: 700 }}\r\n        onClick={() => {\r\n          handleClickOpen();\r\n        }}\r\n      >\r\n        <DeleteIcon className={classes.extendedIcon} />\r\n        DELETE\r\n      </Fab>\r\n    </div>,\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Meme meme={meme} />\r\n    </div>,\r\n    <Drawer\r\n      BackdropProps={{ invisible: true }}\r\n      anchor={\"right\"}\r\n      open={state}\r\n      onClose={() => toggleDrawer(false)}\r\n      style={{ width: \"50px\" }}\r\n      elevation={1}\r\n      width=\"50%\"\r\n    >\r\n      <div style={{ display: \"flex\", backgroundColor: \"#F9FAFB\" }}>\r\n        <div style={{ paddingLeft: 20, paddingRight: 20, maxWidth: \"600px\" }}>\r\n          <h4 style={{ fontWeight: 400, fontSize: 20 }}>Edit X Meme</h4>\r\n          <h5\r\n            style={{\r\n              fontWeight: 400,\r\n              fontSize: 14,\r\n              color: \"#6b7280\",\r\n              marginTop: \"-18px\",\r\n            }}\r\n          >\r\n            Get started by filling in the information below to create your new\r\n            xmeme. Don't DOS it please. Be a human.\r\n          </h5>\r\n        </div>\r\n        <div style={{ padding: \"30px 10px\" }}>\r\n          <Icon\r\n            onClick={() => toggleDrawer(false)}\r\n            style={{ cursor: \"pointer\" }}\r\n            onMouseEnter={() => toggleColor(\"#6B7280\")}\r\n            onMouseLeave={() => toggleColor(\"#9EA2AD\")}\r\n          >\r\n            <CloseRoundedIcon style={colour} />\r\n          </Icon>\r\n        </div>\r\n      </div>\r\n      <Grid\r\n        container\r\n        style={{\r\n          borderBottom: \"1px solid rgb(0,0,0,0.1)\",\r\n          padding: \"20px 20px\",\r\n          fontSize: \"16px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <span style={{ fontSize: \"14px\" }}>Meme Owner *</span>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7}>\r\n          <TextField\r\n            id=\"name\"\r\n            size=\"small\"\r\n            value={meme.name}\r\n            disabled\r\n            inputProps={{ style: { fontFamily: \"Oxygen\", fontSize: \"14px\" } }}\r\n            fullWidth\r\n            id=\"outlined-name\"\r\n            placeholder=\"Enter your full name\"\r\n            variant=\"outlined\"\r\n            className=\"inputRounded\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        style={{\r\n          borderBottom: \"1px solid rgb(0,0,0,0.1)\",\r\n          padding: \"20px 20px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          style={{ display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          <span style={{ fontSize: \"14px\" }}>Caption *</span>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7}>\r\n          <TextField\r\n            id=\"caption\"\r\n            value={caption}\r\n            helperText={helperText1}\r\n            FormHelperTextProps={{\r\n              className: classes.helpertext,\r\n            }}\r\n            onChange={(event) => {\r\n              setCaption(event.target.value);\r\n            }}\r\n            size=\"small\"\r\n            inputProps={{ style: { fontFamily: \"Oxygen\", fontSize: \"14px\" } }}\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            rowsMax={3}\r\n            id=\"outlined-caption\"\r\n            placeholder=\"Be creative with your caption\"\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        style={{\r\n          borderBottom: \"1px solid rgb(0,0,0,0.1)\",\r\n          padding: \"20px 20px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          style={{ display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          <span style={{ fontSize: \"14px\" }}>Meme URL *</span>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7}>\r\n          <TextField\r\n            id=\"url\"\r\n            value={url}\r\n            helperText={helperText2}\r\n            FormHelperTextProps={{\r\n              className: classes.helpertext,\r\n            }}\r\n            onChange={(event) => {\r\n              setUrl(event.target.value);\r\n            }}\r\n            size=\"small\"\r\n            inputProps={{ style: { fontFamily: \"Oxygen\", fontSize: \"14px\" } }}\r\n            fullWidth\r\n            id=\"outlined-url\"\r\n            placeholder=\"Enter URL of your meme here\"\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        style={{\r\n          borderBottom: \"1px solid rgb(0,0,0,0.1)\",\r\n          padding: \"20px 20px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          style={{ display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          <span style={{ fontSize: \"14px\" }}>Meme Preview *</span>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7}>\r\n          <Paper\r\n            elevation={1}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              boxShadow: \"0px 2px 4px 1px rgb(0,0,0,0.1)\",\r\n            }}\r\n          >\r\n            <img src={preview} height=\"260px\" width=\"350px\" />\r\n          </Paper>\r\n          <div style={{ margin: \"10px 0px 10px 0px\", fontSize: \"18px\" }}>\r\n            {caption}\r\n          </div>\r\n          <div\r\n            style={{ margin: \"0px 0px\", color: \"#6b7280\", fontSize: \"16px\" }}\r\n          >\r\n            {meme.name}\r\n          </div>\r\n        </Grid>\r\n        <div hidden={hidden} style={{ paddingTop: \"40px\", color: \"#b91c1c\" }}>\r\n          {message}\r\n        </div>\r\n      </Grid>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          padding: \"10px 18px\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          style={{\r\n            textTransform: \"none\",\r\n            fontFamily: \"Oxygen\",\r\n            fontSize: \"14px\",\r\n            padding: \"5px 15px\",\r\n            margin: \"10px\",\r\n            borderRadius: \"7px\",\r\n          }}\r\n          onClick={() => toggleDrawer(false)}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!shouldUpdate()}\r\n          style={{\r\n            textTransform: \"none\",\r\n            fontFamily: \"Oxygen\",\r\n            color: \"white\",\r\n            fontSize: \"14px\",\r\n            backgroundColor: \"#4338CA\",\r\n            padding: \"5px 15px\",\r\n            margin: \"10px\",\r\n            borderRadius: \"7px\",\r\n          }}\r\n          onClick={() => {\r\n            checkFields();\r\n          }}\r\n        >\r\n          Update\r\n        </Button>\r\n      </div>\r\n    </Drawer>,\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Confirm Deletion?</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText\r\n          id=\"alert-dialog-description\"\r\n          style={{ fontFamily: \"Oxygen\" }}\r\n        >\r\n          Are you sure want to delete the Meme?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={handleClose}\r\n          color=\"primary\"\r\n          style={{ fontFamily: \"Oxygen\" }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          autoFocus\r\n          style={{ fontFamily: \"Oxygen\" }}\r\n          onClick={() => {\r\n            deleteMeme();\r\n          }}\r\n        >\r\n          CONFIRM\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>,\r\n  ];\r\n};\r\n\r\nexport default ShowMeme;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport Layout from \"./components/Layout\";\r\nimport ShowMeme from \"./components/ShowMeme\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    // element: <Layout />,\r\n    children: [\r\n      // { path: 'home', element: <Home /> },\r\n      { path: \"/\", element: <Layout /> },\r\n      { path: \"/:id\", element: <ShowMeme /> },\r\n      { path: \"*\", element: <Navigate to=\"/\" replace /> },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport MainBar from \"./components/MainBar\";\r\n\r\nimport { useRoutes } from \"react-router-dom\";\r\n\r\nimport routes from \"./routes\";\r\n\r\nfunction App() {\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <div style={{ height: \"100%\", paddingBottom: \"30px\" }}>\r\n      <MainBar />\r\n      {routing}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}